parameters:
  vmImage: ''
  vmMacImage: ''
  vmMacImageTest: ''
  vmLinuxImage: ''
  vmLinuxPool: ''
  xCodeRootTest: ''
  xCodeRootBuild: ''
  poolName: ''
  UNO_UWP_BUILD: ''
  XAML_FLAVOR_BUILD: ''

jobs:
- template: .azure-devops-package-skia-native-assets.yml
  parameters:
    UNO_UWP_BUILD: ${{ parameters.UNO_UWP_BUILD }}
    XAML_FLAVOR_BUILD: ${{ parameters.XAML_FLAVOR_BUILD }}
    macOSImageName: ${{ parameters.vmMacImage }}
    AssetNativeSuffix: '-SamplesApp'

- job: Skia_Tests_Build
  displayName: 'Build Skia Samples App UI Tests'
  timeoutInMinutes: 60
  cancelTimeoutInMinutes: 1
  dependsOn: skia_package_macos_native_build

  pool: ${{ parameters.poolName }}

  variables:
    CombinedConfiguration: Release|Any CPU
    CI_Build: true

    # Use pre-defined local nuget cache for restore
    NUGET_PACKAGES: 'C:\NugetPackages'

    UNO_UWP_BUILD: ${{ parameters.UNO_UWP_BUILD }}
    XAML_FLAVOR_BUILD: ${{ parameters.XAML_FLAVOR_BUILD }}

  steps:
  - checkout: self
    clean: true

  - template: templates/gitversion.yml
  - template: templates/dotnet-mobile-install-windows.yml
    parameters:
      UnoCheckParameters: '--tfm net9.0-browserwasm --tfm net9.0-desktop --tfm net9.0-android'

  - template: templates/nuget-cache.yml
    parameters:
      nugetPackages: $(NUGET_PACKAGES)

  ## Restore skia-macos native assets
  - task: DownloadPipelineArtifact@2
    displayName: Restoring macOS native assets
    inputs:
      artifact: NugetPackages-Artifacts-skia-macos-native-SamplesApp-$(XAML_FLAVOR_BUILD)
      path: $(Build.SourcesDirectory)/src/Uno.UI.Runtime.Skia.MacOS/UnoNativeMac/build/Release

  - powershell: dotnet msbuild src/SamplesApp/UnoIslandsSamplesApp.Skia.WPF/UnoIslandsSamplesApp.Skia.Wpf.csproj /r /m /p:UnoTargetFrameworkOverride=net8.0 /p:Configuration=Release /detailedsummary /m /bl:$(build.artifactstagingdirectory)\build-wpf-islands.binlog
    displayName: Build WPF Islands Head

  - powershell: dotnet publish src/SamplesApp/SamplesApp.Skia.Generic/SamplesApp.Skia.Generic.csproj -c Release -p:UnoTargetFrameworkOverride=net8.0 -f net8.0 /bl:$(build.artifactstagingdirectory)\logs\build-generic.binlog
    displayName: Build Generic Skia Head

  - powershell: dotnet publish src/SamplesApp/SamplesApp.Skia.netcoremobile/SamplesApp.Skia.netcoremobile.csproj -c Release -f net9.0-android -p:RunAOTCompilation=false -p:UnoTargetFrameworkOverride=net9.0-android /bl:$(build.artifactstagingdirectory)\logs\build-skia-android.binlog
    displayName: Build Skia Android Head

  - task: CopyFiles@2
    displayName: 'Copy Generated Android APK'
    inputs:
      SourceFolder: $(build.sourcesdirectory)/src/SamplesApp/SamplesApp.Skia.netcoremobile/bin/Release/net9.0-android/publish
      Contents: 'uno.platform.samplesapp.skia-Signed.apk'
      TargetFolder: $(build.artifactstagingdirectory)/android
      CleanTargetFolder: false
      OverWrite: false
      flattenFolders: false

  - task: PublishPipelineArtifact@1
    displayName: 'Publish Generic Binaries'
    retryCountOnTaskFailure: 3
    inputs:
      targetPath: $(Build.SourcesDirectory)\src\SamplesApp\SamplesApp.Skia.Generic\bin\Release\net8.0
      artifactName: skia-generic-samples-app-$(XAML_FLAVOR_BUILD)

  - task: PublishPipelineArtifact@1
    displayName: 'Publish Wpf Islands Binaries'
    retryCountOnTaskFailure: 3
    inputs:
      targetPath: $(Build.SourcesDirectory)\src\SamplesApp\UnoIslandsSamplesApp.Skia.WPF\bin\Release\net8.0-windows
      artifactName: uno-islands-skia-wpf-samples-app-$(XAML_FLAVOR_BUILD)

  - task: PublishPipelineArtifact@1
    displayName: 'Publish Android Binaries'
    retryCountOnTaskFailure: 3
    inputs:
      targetPath: $(build.artifactstagingdirectory)/android
      ArtifactName: uitests-android-skia-build

  - task: PublishBuildArtifacts@1
    retryCountOnTaskFailure: 3
    condition: always()
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)\logs
      ArtifactName: skia-samples-app-binlog
      ArtifactType: Container

- job: Skia_Tests_Build_Apple
  displayName: 'Build Apple Skia Samples App UI Tests'
  timeoutInMinutes: 60
  cancelTimeoutInMinutes: 1
  dependsOn: skia_package_macos_native_build

  pool:
    vmImage: ${{ parameters.vmMacImage }}

  variables:
    CombinedConfiguration: Release|Any CPU
    CI_Build: true
    NUGET_PACKAGES: $(Agent.WorkFolder)/.nuget
    UNO_UWP_BUILD: ${{ parameters.UNO_UWP_BUILD }}
    XAML_FLAVOR_BUILD: ${{ parameters.XAML_FLAVOR_BUILD }}

  steps:
  - checkout: self
    clean: true

  - template: templates/gitversion.yml
  - template: templates/dotnet-mobile-install-mac.yml
    parameters:
      UnoCheckParameters: '--tfm net9.0-ios'

  - template: templates/nuget-cache.yml
    parameters:
      nugetPackages: $(NUGET_PACKAGES)

  ## Restore skia-macos native assets
  - task: DownloadPipelineArtifact@2
    displayName: Restoring macOS native assets
    inputs:
      artifact: NugetPackages-Artifacts-skia-macos-native-SamplesApp-$(XAML_FLAVOR_BUILD)
      path: $(Build.SourcesDirectory)/src/Uno.UI.Runtime.Skia.MacOS/UnoNativeMac/build/Release

  # iOS
  - template: templates/ios-build-select-version.yml
    parameters:
      xCodeRoot: ${{ parameters.xCodeRootBuild }}

  - bash: |
      chmod +x $(build.sourcesdirectory)/build/test-scripts/skia-ios-uitest-build.sh
      $(build.sourcesdirectory)/build/test-scripts/skia-ios-uitest-build.sh
    displayName: Build Skia iOS Head
    env:
      BUILD_SOURCESDIRECTORY: "$(build.sourcesdirectory)"
      BUILD_ARTIFACTSTAGINGDIRECTORY: "$(build.artifactstagingdirectory)"

  - task: CopyFiles@2
    inputs:
      SourceFolder: $(build.sourcesdirectory)/src/SamplesApp/SamplesApp.Skia.netcoremobile/bin/Release/net8.0-ios/iossimulator-x64/SamplesApp.app
      Contents: '**'
      TargetFolder: $(build.artifactstagingdirectory)/bin/SamplesApp.app
      CleanTargetFolder: false
      OverWrite: false
      flattenFolders: false

  - task: PublishPipelineArtifact@1
    displayName: 'Publish iOS Binaries'
    retryCountOnTaskFailure: 3
    inputs:
      targetPath: $(build.artifactstagingdirectory)/bin
      ArtifactName: uitests-ios-skia-build

  - task: PublishBuildArtifacts@1
    retryCountOnTaskFailure: 3
    condition: always()
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      ArtifactName: skia-samples-app-binlog
      ArtifactType: Container
