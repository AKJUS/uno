#nullable enable

using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;

namespace Uno.UI.Tasks.HotReloadInfo;

public class HotReloadInfoHelper
{
	public static string? GetInfoFilePath(Assembly asm)
		=> asm
			.GetCustomAttributesData()
			.FirstOrDefault(attr => attr is { AttributeType.FullName: "__Uno.HotReload.HotReloadInfoAttribute", ConstructorArguments.Count: 1 }) //net std 2.0 :/ [{Value: string {Length: > 0} infoFilePath}] })
			?.ConstructorArguments[0]
			.Value
			?.ToString();

	public static string GenerateAttribute(string infoFilePath)
		=> $$"""
			// <auto-generated>
			//     This code was generated by a tool.
			//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
			// </auto-generated>
			#pragma warning disable
			#nullable enable
			
			[assembly: global::__Uno.HotReload.HotReloadInfoAttribute(@"{{Path.GetFullPath(infoFilePath)}}")]
			
			namespace __Uno.HotReload;
			
			[global::System.AttributeUsage(global::System.AttributeTargets.Assembly, AllowMultiple = false)]
			public class HotReloadInfoAttribute : global::System.Attribute
			{
				public HotReloadInfoAttribute(string infoFilePath)
				{
					InfoFilePath = infoFilePath;
				}
			
				public string InfoFilePath { get; }
			}
			
			""";

	public static string GenerateInfo(long version = 0, string? updateFileRequestId = null)
		=> $$"""
			// <auto-generated>
			//     This code was generated by a tool.
			//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
			// </auto-generated>
			#pragma warning disable
			#nullable enable
			
			namespace __Uno.HotReload;
			
			/// <summary>
			/// Helper class to provide info regarding hot reload functionality in Uno Platform applications.
			/// </summary>
			public partial class HotReloadInfo
			{
				/// <summary>
				/// Gets the incremental current version ID of the application.
				/// </summary>
				/// <remarks>
				/// When not 0, this matches the "UpdateFileResponse.HotReloadCorrelationId" which is also the "HotReloadServerOperation.Id".
				/// </remarks>
				public static long VersionId => {{version}};
				
				/// <summary>
				/// Gets the current version of the application.
				/// </summary>
				/// <remarks>
				/// When not 0, this matches the "UpdateFileResponse.HotReloadCorrelationId" which is also the "HotReloadServerOperation.Id".
				/// </remarks>
				public static string? LastUpdateFileRequestId => {{(updateFileRequestId is null ? "null" : "@\"" + updateFileRequestId + "\"")}};
			}
			""".ToString(CultureInfo.InvariantCulture);
}
